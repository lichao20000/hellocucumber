import lombok.extern.slf4j.Slf4j;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.stereotype.Component;

import java.io.IOException;
import java.util.List;

@Component
@Slf4j
public class MailSender {
    @Autowired
    private JavaMailSender mailSender;
    @Value("${spring.mail.username}" + "@chinaunicom.cn")
    private String mailFrom;
    @Autowired
    private PolicySnapshotMapper policySnapshotMapper;
    @Autowired
    private ClassPathFileReadService classPathFileReadService;

    public void sendMail(String templatePath, String title, GroupSpace gs) throws IOException {
        Integer groupId = gs.getGroupId();
        List<String> emailList = policySnapshotMapper.selectEmail(groupId);
        String[] toEmail = emailList.stream().filter(email -> !StringUtils.isEmpty(email)).toArray(String[]::new);
        if(toEmail.length==0){
            log.error("没有找到可发送通知的地址，租户id:{}",groupId);
        }
        String templateStr = AlarmTemlateUtils.readTemplate(classPathFileReadService,templatePath);
        sendMail(AlarmTemlateUtils.replaceVariable(gs, templateStr),title,toEmail);
    }

    public void sendMail(String content,String title,String[] mail){
        SimpleMailMessage message = new SimpleMailMessage();
        message.setFrom(mailFrom);
        message.setTo(mail);
        message.setSubject(title);
        message.setText(content);
        mailSender.send(message);
    }
}

spring:
  mail:
    host: xxx
    username: xxx
    password: xxxx
    properties:
      mail:
        smtp:
          auth: true
